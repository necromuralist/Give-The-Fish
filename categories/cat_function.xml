<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/xsl" href="../assets/xml/rss.xsl" media="all"?><rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Give the Fish (Posts about Function)</title><link>https://necromuralist.github.io/Give-The-Fish/</link><description></description><atom:link href="https://necromuralist.github.io/Give-The-Fish/categories/cat_function.xml" rel="self" type="application/rss+xml"></atom:link><language>en</language><copyright>Contents Â© 2024 &lt;a href="mailto:cloisteredmonkey.jmark@slmail.me"&gt;Cloistered Monkey&lt;/a&gt; 
&lt;div id="license"xmlns:cc="http://creativecommons.org/ns#" &gt;This work is licensed under
&lt;a href="http://creativecommons.org/licenses/by/4.0/?ref=chooser-v1" target="_blank" rel="license noopener noreferrer" style="display:inline-block;"&gt;CC BY 4.0
&lt;img src="https://mirrors.creativecommons.org/presskit/icons/cc.svg?ref=chooser-v1"&gt;
&lt;img src="https://mirrors.creativecommons.org/presskit/icons/by.svg?ref=chooser-v1"&gt;&lt;/a&gt;
&lt;/div&gt;
</copyright><lastBuildDate>Thu, 25 Apr 2024 00:49:42 GMT</lastBuildDate><generator>Nikola (getnikola.com)</generator><docs>http://blogs.law.harvard.edu/tech/rss</docs><item><title>Function: Mount Data</title><link>https://necromuralist.github.io/Give-The-Fish/posts/function-mount-data/index.html</link><dc:creator>Cloistered Monkey</dc:creator><description>&lt;p&gt;
This is a function to mount one of the external encrypted USB drives that I use. It makes a lot of assumptions about names so it's pretty much an alias or shortcut, but sometimes things change so I added a little bit of flexibility to it and will try to document it enough that I can figure out what it's doing if I need to change (or fix) it.
&lt;/p&gt;

&lt;div id="outline-container-orgd950c8c" class="outline-2"&gt;
&lt;h2 id="orgd950c8c"&gt;The Function&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgd950c8c"&gt;
&lt;p&gt;
This is the function declaration. There's going to be three optional arguments that it might take.
&lt;/p&gt;

&lt;table border="2" cellspacing="0" cellpadding="6" rules="groups" frame="hsides"&gt;


&lt;colgroup&gt;
&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;

&lt;col class="org-left"&gt;
&lt;/colgroup&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th scope="col" class="org-left"&gt;Argument&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Default&lt;/th&gt;
&lt;th scope="col" class="org-left"&gt;Description&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;i&gt;device&lt;/i&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;&lt;code&gt;sdb1&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;Name of the device as shown by &lt;code&gt;fdisk -l&lt;/code&gt; without the directory (&lt;code&gt;/dev/&lt;/code&gt;)&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;i&gt;name&lt;/i&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;&lt;code&gt;monkeymount&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;Name to use when opening the device&lt;/td&gt;
&lt;/tr&gt;

&lt;tr&gt;
&lt;td class="org-left"&gt;&lt;i&gt;folder&lt;/i&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;&lt;code&gt;irvin&lt;/code&gt;&lt;/td&gt;
&lt;td class="org-left"&gt;Place to mount the contents of the disk (without &lt;code&gt;/media/&lt;/code&gt; at the beginning).&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;
So if I plug in the USB drive and it shows up at &lt;code&gt;/dev/sda1&lt;/code&gt; and I decide that the mapped name will be "umma" and the folder will be "gumma". Then I
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; mount-data --argument-names device name folder --description &lt;span class="s2"&gt;"Mount an encrypted drive."&lt;/span&gt;
    &lt;span class="k"&gt;set&lt;/span&gt; ERROR 1
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
The &lt;code&gt;ERROR&lt;/code&gt; is a number to return in the event we bail on mounting the drive for some reason.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org6f42136" class="outline-2"&gt;
&lt;h2 id="org6f42136"&gt;The Parts&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-org6f42136"&gt;
&lt;/div&gt;
&lt;div id="outline-container-org3f248eb" class="outline-3"&gt;
&lt;h3 id="org3f248eb"&gt;The Device&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org3f248eb"&gt;
&lt;p&gt;
This is the name of the device in &lt;code&gt;/dev&lt;/code&gt; that represents the drive to mount. 
&lt;/p&gt;

&lt;p&gt;
This command is useful sometimes. More so after it's been mounted.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;lsblk -e7
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
This one is generally useful if you know the model of the drive.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo fdisk -l &lt;span class="o"&gt;|&lt;/span&gt; grep sd -A 1
&lt;/pre&gt;&lt;/div&gt;


&lt;div class="notecard" id="orgca5b9a0"&gt;
&lt;p&gt;
&lt;b&gt;&lt;b&gt;Note to future self:&lt;/b&gt;&lt;/b&gt; Consider making this an environment variable so you don't have to edit it if you switch USB ports.
&lt;/p&gt;

&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;test&lt;/span&gt; -z &lt;span class="nv"&gt;$device&lt;/span&gt;
    &lt;span class="k"&gt;set&lt;/span&gt; device &lt;span class="s2"&gt;"sdb1"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
We'll add the &lt;code&gt;/dev&lt;/code&gt; to it (without checking that it's already there for now) and then make sure it's a valid block-device.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; DEVICE_PATH &lt;span class="s2"&gt;"/dev/&lt;/span&gt;&lt;span class="nv"&gt;$device&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;

&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;test&lt;/span&gt; -b &lt;span class="nv"&gt;$DEVICE_PATH&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"'&lt;/span&gt;&lt;span class="nv"&gt;$DEVICE_PATH&lt;/span&gt;&lt;span class="s2"&gt;' is not a valid block-device"&lt;/span&gt;
    mount-data-help
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$ERROR&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
To be nice we'll let the user know what we're using.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Using Device: &lt;/span&gt;&lt;span class="nv"&gt;$DEVICE_PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org24fee70" class="outline-3"&gt;
&lt;h3 id="org24fee70"&gt;The Mapping Name&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org24fee70"&gt;
&lt;p&gt;
This is the name that will be put into &lt;code&gt;/dev/mapper/&lt;/code&gt; which &lt;code&gt;mount&lt;/code&gt; will use to mount the drive.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;test&lt;/span&gt; -z &lt;span class="nv"&gt;$name&lt;/span&gt;
    &lt;span class="k"&gt;set&lt;/span&gt; name &lt;span class="s2"&gt;"monkeymount"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Device Mapping: &lt;/span&gt;&lt;span class="nv"&gt;$name&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-org55f9ac0" class="outline-3"&gt;
&lt;h3 id="org55f9ac0"&gt;Mount Path&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-org55f9ac0"&gt;
&lt;p&gt;
Now we'll handle the folder where the drive will be mounted. If the user doesn't give one the default is "irvin".
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;test&lt;/span&gt; -z &lt;span class="nv"&gt;$folder&lt;/span&gt;
    &lt;span class="k"&gt;set&lt;/span&gt; folder &lt;span class="s2"&gt;"irvin"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
We'll assume that the folder is going inside the &lt;code&gt;/media/&lt;/code&gt; folder and that only the final folder (or path below &lt;code&gt;/media/&lt;/code&gt;) is being passed in.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;set&lt;/span&gt; MOUNT_PATH &lt;span class="s2"&gt;"/media/&lt;/span&gt;&lt;span class="nv"&gt;$folder&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If there's already something in the folder then we won't try and mount it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;set&lt;/span&gt; COUNT &lt;span class="o"&gt;(&lt;/span&gt;&lt;span class="k"&gt;count&lt;/span&gt; &lt;span class="o"&gt;(&lt;/span&gt;path normalize &lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;/*&lt;span class="o"&gt;))&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"&lt;/span&gt;&lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;&lt;span class="s2"&gt; not empty, not mounting"&lt;/span&gt;
    &lt;span class="k"&gt;return&lt;/span&gt; &lt;span class="nv"&gt;$ERROR&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
If the folder doesn't exist we'll create it.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;if&lt;/span&gt; &lt;span class="k"&gt;not&lt;/span&gt; &lt;span class="k"&gt;test&lt;/span&gt; -d &lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Creating '&lt;/span&gt;&lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;&lt;span class="s2"&gt;'"&lt;/span&gt;
    sudo mkdir --parents &lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Mounting at: &lt;/span&gt;&lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;&lt;span class="s2"&gt;"&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgbe9f49e" class="outline-3"&gt;
&lt;h3 id="orgbe9f49e"&gt;Mounting the Drive&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-orgbe9f49e"&gt;
&lt;p&gt;
First we'll use &lt;code&gt;cryptsetup&lt;/code&gt; to decrypt the drive and put the mapping into &lt;code&gt;/dev/mapper/&lt;/code&gt;.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;echo&lt;/span&gt;
&lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Mounting External Data Drive"&lt;/span&gt;

sudo cryptsetup &lt;span class="nb"&gt;open&lt;/span&gt; &lt;span class="nv"&gt;$DEVICE_PATH&lt;/span&gt; &lt;span class="nv"&gt;$name&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;
Now we'll mount the device to a folder.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;sudo mount /dev/mapper/&lt;span class="nv"&gt;$name&lt;/span&gt; &lt;span class="nv"&gt;$MOUNT_PATH&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;div id="outline-container-orgcdfa7e3" class="outline-2"&gt;
&lt;h2 id="orgcdfa7e3"&gt;A Help Printer&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orgcdfa7e3"&gt;
&lt;p&gt;
This is just a function to print a help string.
&lt;/p&gt;

&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;&lt;span class="k"&gt;function&lt;/span&gt; mount-data-help
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Mount an attached encrypted drive."&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"Usage: mount-data [device [name [folder]]]"&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"    device: /dev/&amp;lt;device block file&amp;gt;"&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"    name: /dev/wrapper/&amp;lt;name&amp;gt; to use"&lt;/span&gt;
    &lt;span class="k"&gt;echo&lt;/span&gt; &lt;span class="s2"&gt;"    folder: /media/&amp;lt;folder&amp;gt; to mount into"&lt;/span&gt;
&lt;span class="k"&gt;end&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div id="outline-container-orge15a4ba" class="outline-2"&gt;
&lt;h2 id="orge15a4ba"&gt;Links&lt;/h2&gt;
&lt;div class="outline-text-2" id="text-orge15a4ba"&gt;
&lt;ul class="org-ul"&gt;
&lt;li&gt;&lt;a href="https://fishshell.com/docs/current/cmds/not.html"&gt;fish Not&lt;/a&gt;: Negate the exit status of a job (&lt;code&gt;test&lt;/code&gt; in this case).&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fishshell.com/docs/current/cmds/test.html"&gt;fish test&lt;/a&gt;: The &lt;code&gt;test&lt;/code&gt; command.&lt;/li&gt;
&lt;li&gt;&lt;a href="https://fishshell.com/docs/current/cmds/path.html#normalize-subcommand"&gt;Fish normalize path&lt;/a&gt;: squash extra slashes and make it look like a valid path.&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;/div&gt;</description><category>function</category><category>mount</category><guid>https://necromuralist.github.io/Give-The-Fish/posts/function-mount-data/index.html</guid><pubDate>Wed, 24 Apr 2024 21:19:08 GMT</pubDate></item></channel></rss>